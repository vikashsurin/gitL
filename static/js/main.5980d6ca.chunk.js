(this.webpackJsonpgit=this.webpackJsonpgit||[]).push([[0],[,,,function(e,t,l){e.exports=l(10)},,,,,function(e,t,l){},function(e,t,l){},function(e,t,l){"use strict";l.r(t);var a=l(0),n=l.n(a),r=l(2),c=l.n(r);l(8),l(9);var i=function(){return n.a.createElement("div",{className:"App"},n.a.createElement("div",{className:"start"},n.a.createElement("h1",null,"Guide to git"),n.a.createElement("p",null),n.a.createElement("img",null)),"--------xx-------",n.a.createElement("div",{className:"init"},n.a.createElement("h1",null,"initialize project"),n.a.createElement("p",null,"initialize a new project in a new or present working directory."),n.a.createElement("code",null,"git init"),n.a.createElement("p",null,n.a.createElement("small",null,"invisible git file is created."))),"-------------x------------",n.a.createElement("div",{className:"add"},n.a.createElement("h2",null,"stage file"),n.a.createElement("p",null,"Now scan for files and add them to queue."),n.a.createElement("code",null,"git add file.txt"),n.a.createElement("p",null,n.a.createElement("small",null,"add single file")),n.a.createElement("p",null,"All the files can be added at once."),n.a.createElement("code",null,"git add."),n.a.createElement("p",null,n.a.createElement("small",null,"adds all the untracked files."))),"---------------x---------------",n.a.createElement("div",null,n.a.createElement("h2",null,"Commitment"),n.a.createElement("p",null,"Now permanently record the files, also known as commit."),n.a.createElement("code",null,"git commit -m 'commit message'"),n.a.createElement("p",null,n.a.createElement("small",null,"commit the file or make it ready to be pushed",n.a.createElement("br",null),n.a.createElement("code",null,"-m")," stands for message."))),"-------------------xx------------------",n.a.createElement("div",null,n.a.createElement("h2",null,"Where to push?"),n.a.createElement("p",null,"Now the files are ready but where to push.Lets connect to a link,so called repository Url."),n.a.createElement("code",null,"git remote add origin https://github.com/username/repo.git"),n.a.createElement("p",null,n.a.createElement("small",null,"the file will be sent via this url to the github repo"))),"---------------xxx-----------",n.a.createElement("div",null,n.a.createElement("h2",null,"Now push."),n.a.createElement("p",null,"Now push all the files to the repository."),n.a.createElement("code",null,"git push -u origin master"),n.a.createElement("p",null,n.a.createElement("small",null,"the file would be uploaded to the github repo, where the url points to.",n.a.createElement("br",null),n.a.createElement("code",null,"-u")," means untracked files",n.a.createElement("br",null),n.a.createElement("code",null,"origin")," means the current repo url.it is used as an alias for url.",n.a.createElement("br",null),"master is the default branch , Lets see branches next."))),"----------------------xx-----------------------",n.a.createElement("div",null,n.a.createElement("h2",null,"branch story"),n.a.createElement("img",{width:"50%",src:"https://images.pexels.com/photos/5158367/pexels-photo-5158367.png?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"}),n.a.createElement("img",{width:"50%",src:"https://images.pexels.com/photos/5158375/pexels-photo-5158375.png?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",alt:"image"})))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(i,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[3,1,2]]]);
//# sourceMappingURL=main.5980d6ca.chunk.js.map